[
    {
      "question": "When the tester verifies the test basis while designing tests early in the lifecycle, which test objective is being achieved?",
      "options": [
        "Gaining confidence",
        "Finding defects",
        "Evaluating work products",
        "Providing information for decision making"
      ],
      "answer": 2
    },
    {
      "question": "In some Agile teams, people are encouraged to use their skills to help the team, regardless of their role. This could mean that testers help the developers write code and developers help testers test. What is this approach called?",
      "options": [
        "Team Aid",
        "Whole Team",
        "Skills First",
        "First Aid"
      ],
      "answer": 1
    },
    {
      "question": "Which of the following is a correct statement?",
      "options": [
        "A developer makes a mistake which causes a defect that may be seen as a failure during dynamic testing",
        "A developer makes an error which results in a failure that may be seen as a fault when the software is executed",
        "A developer has introduced a failure which results in a defect that may be seen as a mistake during dynamic testing",
        "A developer makes a mistake which causes a bug that may be seen as a defect when the software is executed"
      ],
      "answer": 0
    },
    {
      "question": "Why is it important to avoid the principle of tests wearing out?",
      "options": [
        "Dynamic testing is less reliable in finding bugs",
        "Running the same tests repeatedly will consistently find new failures",
        "Tests should not be context dependent",
        "Running the same tests repeatedly will reduce the chance of finding new failures"
      ],
      "answer": 3
    },
    {
      "question": "When following a standard test process, when should the test control activity take place?",
      "options": [
        "During the planning activities",
        "During the implementation and execution activities",
        "During the monitoring activities",
        "During all the activities"
      ],
      "answer": 3
    },
    {
      "question": "Which of the following is the activity that compares the planned test progress to the actual test progress?",
      "options": [
        "Test monitoring",
        "Test planning",
        "Test closure",
        "Test control"
      ],
      "answer": 0
    },
    {
      "question": "If you are working on a project that is constrained by time and budget, which is pressuring testing to be done quickly. How should the test approach be adjusted?",
      "options": [
        "Develop detailed test cases to reduce the test automation effort",
        "Use techniques such as exploratory and checklist testing to spend less time on test case development",
        "Ensure that your testing starts only after the developers have completed integration tests",
        "Develop end-to-end test automation before performing manual testing so the automation can be used sooner"
      ],
      "answer": 1
    },
    {
      "question": "What is the biggest problem with a developer testing his own code?",
      "options": [
        "Developers are not good testers",
        "Developers are not quality focused",
        "Developers are not objective about their own code",
        "Developers do not have time to test their own code"
      ],
      "answer": 2
    },
    {
      "question": "Which of the following is an example of a good testing practice?",
      "options": [
        "Testers should have development experience",
        "Developers should determine the order of test execution in the test procedures",
        "Test design should begin when the code is complete to avoid changes",
        "Testers should review requirements documents as soon as a readable draft is available"
      ],
      "answer": 3
    },
    {
      "question": "When coding is directed by the test cases, what development approach is being used?",
      "options": [
        "TDD",
        "BDD",
        "ATDD",
        "TBD"
      ],
      "answer": 0
    },
    {
      "question": "During which level(s) of testing should non-functional tests be executed?",
      "options": [
        "Unit and integration only",
        "System testing only",
        "Integration, system and acceptance only",
        "Unit, integration, system and acceptance only"
      ],
      "answer": 3
    },
    {
      "question": "When a system is targeted for decommissioning, what type of maintenance testing may be required?",
      "options": [
        "Retirement testing",
        "Regression testing",
        "Data migration testing",
        "Patch testing"
      ],
      "answer": 2
    },
    {
      "question": "In an iterative lifecycle model, which of the following is an accurate statement about testing activities?",
      "options": [
        "For every development activity, there should be a corresponding testing activity",
        "For every testing activity, appropriate documentation should be produced, versioned and stored",
        "For every development activity resulting in code, there should be a testing activity to document test cases",
        "For every testing activity, metrics should be recorded and posted to a metrics dashboard for all stakeholders"
      ],
      "answer": 0
    },
    {
      "question": "In what way is CI/CD an example of the concept of shift-left?",
      "options": [
        "It gets the code to production faster",
        "It allows the developers to continuously integrate their code",
        "It requires continuous testing throughout the pipeline",
        "It elevates the testers as the owners of quality"
      ],
      "answer": 2
    },
    {
      "question": "In a formal review, which role is normally responsible for documenting all the open issues?",
      "options": [
        "The facilitator",
        "The author",
        "The scribe",
        "The manager"
      ],
      "answer": 2
    },
    {
      "question": "What is the primary reason to get early and frequent feedback from stakeholders regarding a product being developed?",
      "options": [
        "To make them feel involved",
        "To ensure that their vision for the product will be realized",
        "To create more meetings",
        "To use the stakeholders as testers"
      ],
      "answer": 1
    },
    {
      "question": "Which of the following is a benefit of static analysis?",
      "options": [
        "Defects can be identified that might not be caught by dynamic testing",
        "Early defect identification requires less documentation",
        "Early execution of the code provides a gauge of code quality",
        "Tools are not needed because reviews are used instead of executing code"
      ],
      "answer": 0
    },
    {
      "question": "For a formal review, at what point in the process are the exit criteria defined?",
      "options": [
        "Planning",
        "Review initiation",
        "Individual review",
        "Fixing and reporting"
      ],
      "answer": 0
    },
    {
      "question": "Which of the following test techniques uses the requirements specifications as a test basis?",
      "options": [
        "Structure-based",
        "Black-box",
        "White-box",
        "Exploratory"
      ],
      "answer": 1
    },
    {
      "question": "If you are testing a module of code, how do you determine the level of branch coverage you have achieved?",
      "options": [
        "By taking the number of branches you have tested and dividing that by the total number of executable statements in the module",
        "By taking the number of branches you have tested and dividing that by the total number of branches in the module",
        "By taking the number of branches you have tested and dividing that by the total lines of code in the module",
        "By taking the number of branches you have tested and dividing that by the total number of test cases you have executed for the module"
      ],
      "answer": 1
    },
    {
      "question": "If you have a section of code that has one simple IF statement, how many tests will be needed to achieve 100% branch coverage?",
      "options": [
        "1",
        "2",
        "5",
        "Unknown with this information"
      ],
      "answer": 1
    },
    {
      "question": "Which of the following is a good reason to use experience-based testing?",
      "options": [
        "You can find defects that might be missed by more formal techniques",
        "You can test for defects that only experienced users would encounter",
        "You can target the developer’s efforts to the areas that users will be more likely to use",
        "It is supported by strong tools and can be automated"
      ],
      "answer": 0
    },
    {
      "question": "What is error guessing?",
      "options": [
        "A testing technique used to guess where a developer is likely to have made a mistake",
        "A technique used for assessing defect metrics",
        "A development technique to verify that all error paths have been coded",
        "A planning technique used to anticipate likely schedule variances due to faults"
      ],
      "answer": 0
    },
    {
      "question": "When using the 3 C’s technique for user story development, what is the work product that is created for the Confirmation aspect?",
      "options": [
        "Test Approach",
        "Acceptance Criteria",
        "Entry Criteria",
        "Exit Criteria"
      ],
      "answer": 1
    },
    {
      "question": "You are testing a machine that scores exam papers and assigns grades. Based on the score achieved the grades are as follows: 1-49 = F, 50-59 = D-, 60-69 = D, 70-79 = C, 80-89 = B, 90-100 = A. If you apply equivalence partitioning, how many test cases will you need to achieve minimum test coverage?",
      "options": [
        "6",
        "8",
        "10",
        "12"
      ],
      "answer": 1
    },
    {
      "question": "You are testing a thermostat for a heating/air conditioning system. You have been given the following requirements:<ul style=\"margin-top:0;\"><li>When the temperature is below 70 degrees, turn on the heating system</li><li>When the temperature is above 75 degrees, turn on the air conditioning system</li><li>When the temperature is between 70 and 75 degrees, inclusive, turn on fan only</li></ul>Which of the following is the minimum set of test temperature values to achieve 100% two-value boundary value analysis coverage?",
      "options": [
        "70, 75",
        "65, 72, 80",
        "69, 70, 75, 76",
        "70, 71, 74, 75, 76"
      ],
      "answer": 2
    },
    {
      "question": "You have been given the following conditions and results from those condition combinations. Using the decision table technique, what is the minimum number of test cases you would need to test these conditions?",
      "image": "images/ctfl3_27.png",
      "options": [
        "7",
        "13",
        "15",
        "18"
      ],
      "answer": 2
    },
    {
      "question": "A user must log in to the system with a valid username and password. If they fail to enter the correct combination three times, they will receive an error and will have to wait 10 minutes before trying again. The test terminates when the user successfully logs in. How many test cases are needed to provide 100% state transition coverage?",
      "options": [
        "1",
        "2",
        "4",
        "5"
      ],
      "answer": 0
    },
    {
      "question": "You are creating test cases for the following story, applying the ATDD approach:<br>As a hotel owner<br>I want to reserve all the rooms on a floor before moving to the next floor<br>So I can maximize the efficiency of the housekeeping staff<br>You have decided to apply equivalence partitioning to this requirement and have identified the following partitions for the occupancy of a floor:<ul style=\"margin-top:0;\"><li>0</li><li>1 - floor full</li><li>overbooked</li></ul>You also want to be sure that the software is usable by the staff and that it performs quickly in determining which floors have availability. Given this information, what should be the priority order for the tests you will design?",
      "options": [
        "0, 1-floor full, overbooked, usability, performance",
        "Performance, 1-floor full, usability, overbooked, 0",
        "Usability, performance, overbooked, 0, 1-floor full",
        "Overbooked, 0, 1-floor full, performance, usability"
      ],
      "answer": 0
    },
    {
      "question": "A metric that tracks the number of test cases passed is gathered during which activity in the test process?",
      "options": [
        "Planning",
        "Implementation",
        "Execution",
        "Reporting"
      ],
      "answer": 2
    },
    {
      "question": "You are working in a team of testers who are all writing test cases. You have noticed that there is a significant inconsistency with the length and amount of detail in the different test cases. Where should the criteria for test case writing be documented?",
      "options": [
        "The test plan",
        "The test approach",
        "The test case template",
        "The project plan"
      ],
      "answer": 0
    },
    {
      "question": "Unit tests belong in which testing quadrant?",
      "options": [
        "Q1",
        "Q2",
        "Q3",
        "Q4"
      ],
      "answer": 0
    },
    {
      "question": "Which of the following is a project risk?",
      "options": [
        "A module that performs incorrect calculations due to a defect in a formula",
        "A failed performance test",
        "An issue with the interface between the system under test and a peripheral device",
        "A problem with the development manager which is resulting in his rejecting all defect reports"
      ],
      "answer": 3
    },
    {
      "question": "Which of the following variances should be explained in the Test Summary Report?",
      "options": [
        "The variances between the weekly status reports and the test exit criteria",
        "The variances between the defects found and the defects fixed",
        "The variances between what was planned for testing and what was actually tested",
        "The variances between the test cases executed and the total number of test cases"
      ],
      "answer": 2
    },
    {
      "question": "If the developers are releasing code for testing that is not version controlled, what process is missing?",
      "options": [
        "Configuration management",
        "Debugging",
        "Test and defect management",
        "Risk analysis"
      ],
      "answer": 0
    },
    {
      "question": "Your team is using Planning Poker to estimate the effort for a story. Developer Vote: 3, 5, 5; Tester Vote: 8, 8, 5. Although three votes were taken to reach consensus, how many story points should be allocated to the story?",
      "options": [
        "10 because that’s the sum of the points",
        "8 because that was the highest number",
        "3 because that was the lowest number",
        "5 because that was the consensus"
      ],
      "answer": 3
    },
    {
      "question": "You have been given the following set of test cases to run. You have been instructed to run them in order by risk and to accomplish the testing as quickly as possible to provide feedback to the developers as soon as possible. Given this information, what is the best order in which to run these tests?",
      "image": "images/ctfl3_36.png",
      "options": [
        "2, 4, 5, 6, 1, 3",
        "4, 3, 2, 5, 6, 1",
        "2, 5, 6, 4, 1, 3",
        "6, 1, 3, 2, 4, 5"
      ],
      "answer": 0
    },
    {
      "question": "You have been testing software that will be used to track credit card purchases. You have found a defect that causes the system to crash, but only if a person has made and voided 10 purchases in a row. What is the proper priority and severity rating for this defect?",
      "image": "images/ctfl3_37.png",
      "options": [
        "Priority high, severity high",
        "Priority high, severity low",
        "Priority low, severity low",
        "Priority low, severity high"
      ],
      "answer": 3
    },
    {
      "question": "Which of the following is an example of a tool that supports static testing?",
      "options": [
        "A tool that assists with tracking the results of reviews",
        "A defect tracking tool",
        "A test automation tool",
        "A tool that helps design test cases for security testing"
      ],
      "answer": 0
    },
    {
      "question": "Which of the following is a benefit of test automation?",
      "options": [
        "Test execution is faster",
        "Manual testing becomes obsolete",
        "ROI is easy to determine",
        "Test implementation is faster"
      ],
      "answer": 0
    }
  ]